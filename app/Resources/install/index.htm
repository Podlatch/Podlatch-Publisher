
<!--
  ~ Copyright (c) Benjamin Issleib 2019.
  ~ This file is part of the Podlatch Podcast Publisher.
  ~ Podlatch Podcast Publisher is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
  ~ Podlatch Podcast Publisher is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.
  ~ You should have received a copy of the GNU General Public License along with the Podlatch Podcast Publisher. If not, see http://www.gnu.org/licenses/.
  -->

<!DOCTYPE html>
<html>

<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Podlatch Installer</title>
    <link href="../css/master.css" rel="stylesheet">

</head>

<body>



<div class="section">
    <div class="notification has-text-centered">
        <p class="title">Podlatch Installer</p>
    </div>
    <div id="notification" class="" style="display: none">
    </div>
        <form id="installform">
            <div class="columns">

            <div id="databasefields" class="column" style="display: block">
                <h2 class="subtitle">Database</h2>
                <div class="field">
                    <label class="label">Name</label>
                    <div class="control">
                        <input required class="input" type="text" name="dbname" placeholder="MySQL-Database">
                    </div>
                </div>
                <div class="field">
                    <label class="label">User</label>
                    <div class="control">
                        <input required class="input" type="text" name="dbuser" placeholder="MySQL-Username">
                    </div>
                </div>
                <div class="field">
                    <label class="label">Password</label>
                    <div class="control">
                        <input required class="input" type="password" name="dbpassword" placeholder="MySQL-Password">
                    </div>
                </div>

                <div class="field">
                    <label class="label">Host</label>
                    <div class="control">
                        <input class="input" type="text" name="dbhost" placeholder="127.0.0.1">
                    </div>
                </div>
                <div class="field">
                    <label class="label">Port</label>
                    <div class="control">
                        <input class="input" type="text" name="dbport" placeholder="3306">
                    </div>
                </div>

                <div class="control">
                    <button type="button" id="checkconnection" class="button is-primary">Check Connection</button>
                </div>
            </div>
            <div id="adminfields" class="column" style="display: none">
                <h2 class="subtitle">Podlatch Admin</h2>
                <div class="field">
                    <label class="label">Email</label>
                    <div class="control">
                        <input class="input" type="email" name="podlatchEmail" placeholder="admin@podlat.ch">
                    </div>
                </div>
                <div class="field">
                    <label class="label">User</label>
                    <div class="control">
                        <input class="input" type="text" name="podlatchUser" placeholder="adminuser">
                    </div>
                </div>
                <div class="field">
                    <label class="label">Password</label>
                    <div class="control">
                        <input class="input" type="password" name="podlatchPassword" placeholder="safe password">
                    </div>
                </div>
                <div class="control">
                    <button type="button" id="install" class="button is-primary">Submit</button>
                </div>
            </div>
            </div>


        </form>

    <script>
        document.getElementById("checkconnection").addEventListener("click", check_connection);
        document.getElementById("install").addEventListener("click", install);

        function status(response) {
            if (response.status >= 200 && response.status < 300) {
                return Promise.resolve(response)
            } else {
                return Promise.reject(new Error(response.statusText))
            }
        }

        function check_connection() {
            var form = document.forms["installform"];
            var formData = new FormData(form);


            fetch('index.php?action=check-database',
                {
                    method: 'post',
                    headers: {
                        'Accept': 'application/json',
                    },
                    body: formData
                })
                .then(status)
                .then(function(response) {

                    adminfields = document.getElementById('adminfields');
                    if (adminfields.style.display === "none") {
                        adminfields.style.display = "block";
                    }
                    databasefields = document.getElementById('databasefields');

                    if (databasefields.style.display === "block") {
                        databasefields.style.display = "none";
                    }

                    notification = document.getElementById('notification');
                    if (notification.style.display === "none") {
                        notification.style.display = "block";
                    }

                    notification.className = '';
                    notification.classList.add('is-primary');
                    notification.classList.add('notification');

                    notification.innerHTML = 'Success';

                    return response.json();
                })
                .catch(function(error) {
                    notification = document.getElementById('notification');
                    if (notification.style.display === "none") {
                        notification.style.display = "block";
                    }
                    notification.className = '';
                    notification.classList.add('is-danger');
                    notification.classList.add('notification');

                    notification.innerHTML = 'Connection failed';
                });
        }

        function install() {
            var form = document.forms["installform"];
            var formData = new FormData(form);

            document.getElementById("install").classList.add('is-loading');

            fetch('index.php?action=create-schema',
                {
                    method: 'post',
                    headers: {
                        'Accept': 'application/json',
                    },
                    body: formData
                })
                .then(status)
                .then(function(response) {
                    fetch('index.php?action=finish')
                        .then(function (response) {
                            if (response.redirected) {
                                window.location.replace(response.url)
                            }
                        })
                })
                .catch(function(error) {
                    document.getElementById("install").classList.remove('is-loading');
                    notification = document.getElementById('notification');
                    if (notification.style.display === "none") {
                        notification.style.display = "block";
                    }
                    notification.className = '';
                    notification.classList.add('is-danger');
                    notification.classList.add('notification');

                    notification.innerHTML = 'Installation failed';
                    console.error(error);
                });
        }
    </script>


</div>


</body>

</html>